{"version":3,"sources":["components/header/index.js","components/header/header.jsx","actions/index.js","constants/action-types.js","components/price-button/index.js","components/price-button/price-button.jsx","components/navbar/navbar.jsx","components/navbar/index.js","components/cart/cart.jsx","components/cart/index.js","components/books-page-item/books-page-item.jsx","components/books-page-item/index.js","components/loading-indicator/loading-indicator.jsx","components/render-checker/render-checker.jsx","components/books-page/index.js","components/books-page/books-page.jsx","filter-price-fn/index.js","containers/books-page-container/books-page-container.jsx","containers/books-page-container/index.js","components/app/app.js","components/app/index.js","serviceWorker.js","reducers/index.js","store/index.js","index.js","services/bookstore-service.js"],"names":["Header","connect","cartItems","className","to","length","map","item","price","reduce","a","b","bookAddedToCart","bookId","type","payload","PriceButton","name","label","idx","onFilterChange","activeItem","onClick","key","mapDispatchToProps","filteredBooksPrice","sortType","Navbar","books","useState","visiblePopup","setVisiblePopup","setActiveItem","sortRef","useRef","handleOutClick","e","path","includes","current","filterChange","priceItems","useEffect","document","body","addEventListener","ref","prevState","style","transform","rotateArrow","props","bookDeletedFromCart","booksDeletedFromCart","Cart","title","count","id","bookDelete","BooksPageItem","book","coverImage","author","src","alt","findIndex","LoadingIndicator","RenderChecker","isLoading","wasError","children","BooksPage","error","filterPriceType","hasError","filterType","arr","sorted","slice","sort","reverse","filterPrice","inCart","fetchBooksRequest","fetchBooksSuccess","fetchBooksFailure","err","BooksPageContainer","bookstore","useContext","bookstoreServiceContext","getBooks","then","catch","renderCartPage","render","renderHomePage","exact","App","Boolean","window","location","hostname","match","initialState","createItem","cartItem","quantity","country","updateCartItems","state","find","itemIdx","store","createStore","action","removedBookId","applyMiddleware","logger","React","createContext","bookstoreService","data","Promise","resolve","setTimeout","ReactDOM","StrictMode","Provider","value","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.47060166.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport './header.sass';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ cartItems }) => {\r\n\r\n  const totalPrice = () => {\r\n    if (cartItems.length) {\r\n      return cartItems.map((item) => item.price).reduce((a, b) => a + b);\r\n    } else {\r\n      return 0\r\n    }\r\n      \r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__content container\">\r\n        <NavLink to=\"https://c01dy.github.io/bookstore-react-redux/home\">\r\n          <div className=\"header__logo\">Bookstore</div>\r\n        </NavLink>\r\n        <NavLink to=\"https://c01dy.github.io/bookstore-react-redux/cart\">\r\n          <div className=\"header__cart-link\">\r\n            <span className=\"cart-total\">{totalPrice()} <i className=\"fas fa-ruble-sign\"></i></span>\r\n            <i className=\"fas fa-shopping-basket cart-icon\"></i>\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  cartItems: PropTypes.array,\r\n}\r\n\r\nconst mapStateToProps = ({ cartItems }) => {\r\n  return { cartItems };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import {\r\n  FETCH_BOOKS_REQUEST,\r\n  FETCH_BOOKS_SUCCESS,\r\n  FETCH_BOOKS_FAILURE,\r\n  BOOK_ADDED_TO_CART,\r\n  BOOK_DELETED_FROM_CART,\r\n  BOOKS_DELETED_FROM_CART,\r\n  FILTERED_BOOKS_PRICE,\r\n} from '../constants/action-types';\r\n\r\nconst fetchBooksRequest = () => {\r\n  return {\r\n    type: FETCH_BOOKS_REQUEST,\r\n  };\r\n};\r\n\r\nconst fetchBooksSuccess = (books) => {\r\n  return {\r\n    type: FETCH_BOOKS_SUCCESS,\r\n    payload: books,\r\n  };\r\n};\r\n\r\nconst fetchBooksFailure = (err) => {\r\n  return {\r\n    type: FETCH_BOOKS_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n  return {\r\n    type: BOOK_ADDED_TO_CART,\r\n    payload: bookId,\r\n  };\r\n};\r\n\r\nconst bookDeletedFromCart = (bookId) => {\r\n  return {\r\n    type: BOOK_DELETED_FROM_CART,\r\n    payload: bookId,\r\n  };\r\n};\r\n\r\nconst booksDeletedFromCart = (bookId) => {\r\n  return {\r\n    type: BOOKS_DELETED_FROM_CART,\r\n    payload: bookId,\r\n  };\r\n};\r\n\r\nconst filteredBooksPrice = (sortType) => {\r\n  return {\r\n    type: FILTERED_BOOKS_PRICE,\r\n    payload: sortType,\r\n  };\r\n};\r\n\r\nexport {\r\n  fetchBooksRequest,\r\n  fetchBooksSuccess,\r\n  fetchBooksFailure,\r\n  bookAddedToCart,\r\n  bookDeletedFromCart,\r\n  booksDeletedFromCart,\r\n  filteredBooksPrice,\r\n};\r\n","const FETCH_BOOKS_SUCCESS = 'FETCH_BOOKS_SUCCESS';\r\nconst FETCH_BOOKS_FAILURE = 'FETCH_BOOKS_FAILURE';\r\nconst FETCH_BOOKS_REQUEST = 'FETCH_BOOKS_REQUEST';\r\n\r\nconst BOOK_ADDED_TO_CART = 'BOOK_ADDED_TO_CART';\r\nconst BOOK_DELETED_FROM_CART = 'BOOK_DELETED_FROM_CART';\r\nconst BOOKS_DELETED_FROM_CART = 'BOOKS_DELETED_FROM_CART';\r\n\r\nconst FILTERED_BOOKS_PRICE = 'FILTERED_BOOKS_PRICE';\r\n\r\n\r\nexport {\r\n    FETCH_BOOKS_REQUEST,\r\n    FETCH_BOOKS_SUCCESS,\r\n    FETCH_BOOKS_FAILURE,\r\n\r\n    BOOK_ADDED_TO_CART,\r\n    BOOK_DELETED_FROM_CART,\r\n    BOOKS_DELETED_FROM_CART,\r\n    FILTERED_BOOKS_PRICE\r\n}","import PriceButton from './price-button';\r\n\r\nexport default PriceButton;\r\n","import React from 'react';\r\nimport './price-button.sass';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PriceButton = ({ name, label, idx, onFilterChange, activeItem }) => {\r\n  return (\r\n    <li\r\n      onClick={() => onFilterChange(idx, name)}\r\n      key={name}\r\n      className={`navbar__price-item ${\r\n        activeItem === idx ? 'price-item-active' : ''\r\n      }`}\r\n    >\r\n      {label}\r\n    </li>\r\n  );\r\n};\r\n\r\nPriceButton.propTypes = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  idx: PropTypes.number,\r\n  onFilterChange: PropTypes.func,\r\n  activeItem: PropTypes.number,\r\n};\r\n\r\nexport default PriceButton;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './navbar.sass';\r\nimport { connect } from 'react-redux';\r\nimport { filteredBooksPrice } from '../../actions';\r\nimport PriceButton from '../price-button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navbar = ({ filteredBooksPrice }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(false);\r\n  const [activeItem, setActiveItem] = useState(0);\r\n  const sortRef = useRef();\r\n\r\n  const toggleVisiblePopup = () => {\r\n    setVisiblePopup((prevState) => !prevState);\r\n  };\r\n\r\n  const handleOutClick = (e) => {\r\n    if (!e.path.includes(sortRef.current)) {\r\n      setVisiblePopup(false);\r\n    }\r\n  };\r\n\r\n  const filterChange = (idx, name) => {\r\n    setActiveItem(idx);\r\n    filteredBooksPrice(name);\r\n  };\r\n\r\n  const priceItems = [\r\n    { name: 'default', label: 'По умолчанию' },\r\n    { name: 'ascending', label: 'Сначала дешевые' },\r\n    { name: 'descending', label: 'Сначала дорогие' },\r\n  ];\r\n\r\n  const renderPopup = () => {\r\n    if (visiblePopup) {\r\n      return (\r\n        <ul className=\"navbar__price-items\">\r\n          {priceItems.map((props, idx) => (\r\n            <PriceButton\r\n              {...props}\r\n              idx={idx}\r\n              key={props.name + idx}\r\n              activeItem={activeItem}\r\n              onFilterChange={filterChange}\r\n            />\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const rotateArrow = () => {\r\n    if (visiblePopup) {\r\n      return {\r\n        transform: \"rotate(180deg)\"\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener('click', handleOutClick);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"navbar__price-filter\">\r\n        <div>\r\n          <div ref={sortRef} className=\"navbar__price-input-group\">\r\n            <span onClick={toggleVisiblePopup} className=\"navbar__price-btn\">\r\n              Сортировать <i className=\"fas fa-chevron-down popup-arrow\" style={rotateArrow()}></i>\r\n            </span>\r\n            {renderPopup()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  books: PropTypes.array,\r\n  filteredBooksPrice: PropTypes.func,\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  filteredBooksPrice,\r\n};\r\n\r\nconst mapStateToProps = ({ books }) => {\r\n  return { books };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import Navbar from './navbar';\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './cart.sass';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  bookAddedToCart,\r\n  bookDeletedFromCart,\r\n  booksDeletedFromCart,\r\n} from '../../actions';\r\n\r\nconst Cart = (props) => {\r\n  const {\r\n    cartItems,\r\n    bookAddedToCart,\r\n    bookDeletedFromCart,\r\n    booksDeletedFromCart,\r\n  } = props;\r\n\r\n  const bookDelete = (id, count) => {\r\n    if (count === 1) {\r\n      return booksDeletedFromCart(id);\r\n    }\r\n    return bookDeletedFromCart(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <table className=\"cart\">\r\n        <caption>\r\n          <div className=\"cart__caption-title\">Корзина товаров</div>\r\n        </caption>\r\n        <thead>\r\n          <tr>\r\n            <th>Товар</th>\r\n            <th>Количество</th>\r\n            <th>Сумма</th>\r\n            <th>Действия</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartItems.map(({ title, count, price, id }) => {\r\n            return (\r\n              <tr key={id}>\r\n                <td className=\"title\">{title}</td>\r\n                <td className=\"count-label\">{count}</td>\r\n                <td className=\"price-label\">\r\n                  {price} <i className=\"fas fa-ruble-sign\"></i>\r\n                </td>\r\n                <td>\r\n                  <span className=\"cart-btns-wrap\">\r\n                    <i\r\n                      onClick={() => bookAddedToCart(id)}\r\n                      className=\"fas fa-plus-square inc-item-btn cart__btn\"\r\n                    ></i>\r\n                    <i\r\n                      onClick={() => bookDelete(id, count)}\r\n                      className=\"fas fa-minus-square dec-item-btn cart__btn\"\r\n                    ></i>\r\n                    <i\r\n                      onClick={() => booksDeletedFromCart(id)}\r\n                      className=\"fas del-item-btn fa-trash cart__btn\"\r\n                    ></i>\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {!cartItems.length ? (\r\n        <div className=\"cart-empty\">\r\n          <i className=\"fas fa-shopping-basket cart-empty-icon\"></i>\r\n          <p className=\"cart-empty-text\">Ваша корзина пуста</p>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  cartItems: PropTypes.array,\r\n  bookAddedToCart: PropTypes.func,\r\n  bookDeletedFromCart: PropTypes.func,\r\n  booksDeletedFromCart: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = ({ cartItems }) => {\r\n  return { cartItems };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  bookAddedToCart,\r\n  bookDeletedFromCart,\r\n  booksDeletedFromCart,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import Cart from './cart';\r\n\r\nexport default Cart;","import React from 'react';\r\nimport './books-page-item.sass';\r\nimport { connect } from 'react-redux';\r\nimport { bookAddedToCart } from '../../actions';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BooksPageItem = (props) => {\r\n  const { id, coverImage, title, author, price } = props.book;\r\n\r\n  const onBookAdded = () => {\r\n    props.bookAddedToCart(id);\r\n  };\r\n\r\n  const bookInCart = () => {\r\n    return props.cartItems.findIndex((item) => item.id === id) > -1 ? (\r\n      <NavLink to=\"/cart\">\r\n        <div>В корзине</div>\r\n      </NavLink>\r\n    ) : (\r\n      'Купить'\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"books-page__item\">\r\n      <img className=\"book-img\" src={coverImage} alt=\"...\" />\r\n      <div className=\"book-labels\">\r\n        <div className=\"book-label-top\">\r\n          <div className=\"book-label-top__title\">{title}</div>\r\n          <div className=\"book-label-top__author\">{author}</div>\r\n        </div>\r\n        <div className=\"book-label-bottom\">\r\n          <div className=\"book-label-bottom__price\">{price} руб.</div>\r\n          <button onClick={onBookAdded} className={`book-label-bottom__btn`}>\r\n            {bookInCart()}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBooksPageItem.propTypes = {\r\n  id: PropTypes.number,\r\n  coverImage: PropTypes.string,\r\n  title: PropTypes.string,\r\n  author: PropTypes.string,\r\n  price: PropTypes.number,\r\n  bookAddedToCart: PropTypes.func,\r\n  cartItems: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = ({ cartItems }) => {\r\n  return { cartItems };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  bookAddedToCart,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksPageItem);\r\n","import BooksPageItem from './books-page-item';\r\n\r\nexport default BooksPageItem;","import React from 'react';\r\nimport './loading-indicator.css';\r\n\r\nconst LoadingIndicator = () => {\r\n  return (\r\n    <div className=\"loading-wrap loading-indicator\">\r\n      <div className=\"loadingio-spinner-rolling-heovkmi4sm\">\r\n        <div className=\"ldio-w37gpl449z\">\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import React from 'react';\r\nimport LoadingIndicator from '../loading-indicator/loading-indicator';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RenderChecker = ({ isLoading, wasError, children }) => {\r\n  if (isLoading) {\r\n    return <LoadingIndicator/>;\r\n  }\r\n\r\n  if (wasError) {\r\n    return <h1>Error</h1>;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nRenderChecker.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  wasError: PropTypes.object,\r\n}\r\n\r\n\r\nexport default RenderChecker;\r\n","import BooksPage from './books-page';\r\n\r\nexport default BooksPage;","import React from 'react';\r\nimport './books-page.sass';\r\nimport BooksPageItem from '../books-page-item';\r\nimport { filterPrice } from '../../filter-price-fn';\r\nimport RenderChecker from '../render-checker/render-checker';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BooksPage = (props) => {\r\n  const { books, isLoading, error, filterPriceType } = props;\r\n\r\n  const renderItems = () => {\r\n    return (\r\n      <RenderChecker isLoading={isLoading} hasError={error}>\r\n        <div className=\"books-page__items\">\r\n          {filterPrice(filterPriceType, books).map((book) => (\r\n            <BooksPageItem key={book.id} book={book} inCart={book.inCart} />\r\n          ))}\r\n        </div>\r\n      </RenderChecker>\r\n    );\r\n  };\r\n\r\n  return <div className=\"books-page\">{renderItems()}</div>;\r\n};\r\n\r\nBooksPage.propTypes = {\r\n  books: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  filterPriceType: PropTypes.string,\r\n};\r\n\r\nexport default BooksPage;\r\n","export const filterPrice = (filterType, arr) => {\r\n    let newArr = arr.slice();\r\n    let sorted = newArr.sort((a, b) => a.price - b.price);\r\n    switch (filterType) {\r\n      case 'default':\r\n        return arr;\r\n      case 'ascending':\r\n        return sorted;\r\n      case 'descending':\r\n        return sorted.reverse();\r\n      default:\r\n        return arr;\r\n    }\r\n  };","import React, { useContext, useEffect } from 'react';\r\nimport { bookstoreServiceContext } from '../../index';\r\nimport BooksPage from '../../components/books-page/';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  fetchBooksRequest,\r\n  fetchBooksSuccess,\r\n  fetchBooksFailure,\r\n} from '../../actions';\r\n\r\nexport const BooksPageContainer = (props) => {\r\n  const bookstore = useContext(bookstoreServiceContext);\r\n  const { fetchBooksRequest, fetchBooksSuccess, fetchBooksFailure } = props;\r\n\r\n  useEffect(() => {\r\n    fetchBooksRequest();\r\n    bookstore\r\n      .getBooks()\r\n      .then((books) => fetchBooksSuccess(books))\r\n      .catch((err) => fetchBooksFailure(err));\r\n  }, []);\r\n\r\n  return <BooksPage {...props} />;\r\n};\r\n\r\nBooksPageContainer.propTypes = {\r\n  fetchBooksRequest: PropTypes.func,\r\n  fetchBooksSuccess: PropTypes.func,\r\n  fetchBooksFailure: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  books: PropTypes.array,\r\n  filterPriceType: PropTypes.string,\r\n}\r\n\r\nconst mapStateToProps = ({ isLoading, error, books, filterPriceType }) => {\r\n  return {\r\n    isLoading,\r\n    error,\r\n    books,\r\n    filterPriceType,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBooksRequest,\r\n  fetchBooksSuccess,\r\n  fetchBooksFailure,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksPageContainer);\r\n","import BooksPageContainer from './books-page-container';\r\n\r\nexport default BooksPageContainer;","import React from 'react';\r\nimport './app.sass';\r\nimport Header from '../header';\r\nimport Navbar from '../navbar';\r\nimport Cart from '../cart';\r\nimport BooksPageContainer from '../../containers/books-page-container';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst renderCartPage = (\r\n  <Route\r\n    path=\"https://c01dy.github.io/bookstore-react-redux/cart\"\r\n    render={() => <Cart />}/>\r\n);\r\n\r\nconst renderHomePage = (\r\n  <Route\r\n    path=\"https://c01dy.github.io/bookstore-react-redux/home\"\r\n    exact\r\n    render={() => (\r\n      <>\r\n        <Navbar />\r\n        <BooksPageContainer />\r\n      </>\r\n    )}\r\n  />\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <div className=\"container flex\">\r\n        {renderHomePage}\r\n        {renderCartPage}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  FETCH_BOOKS_REQUEST,\r\n  FETCH_BOOKS_SUCCESS,\r\n  FETCH_BOOKS_FAILURE,\r\n  BOOK_ADDED_TO_CART,\r\n  BOOK_DELETED_FROM_CART,\r\n  BOOKS_DELETED_FROM_CART,\r\n  FILTERED_BOOKS_PRICE,\r\n} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n  books: [],\r\n  isLoading: false,\r\n  error: null,\r\n  cartItems: [],\r\n  filterPriceType: 'default',\r\n};\r\n\r\nconst createItem = (cartItem, book, quantity) => {\r\n  if (cartItem) {\r\n    return {\r\n      ...cartItem,\r\n      price: quantity > 0 ? cartItem.price + book.price  : cartItem.price - book.price,\r\n      count: cartItem.count + quantity,\r\n    };\r\n  } else {\r\n    return {\r\n      id: book.id,\r\n      title: book.title,\r\n      author: book.author,\r\n      price: book.price,\r\n      country: book.country,\r\n      coverImage: book.coverImage,\r\n      count: book.count,\r\n    };\r\n  }\r\n};\r\n\r\nconst updateCartItems = (state, bookId, quantity) => {\r\n  const { books, cartItems } = state;\r\n\r\n  const book = books.find(({ id }) => id === bookId);\r\n  const itemIdx = cartItems.findIndex(({ id }) => id === bookId);\r\n  const cartItem = cartItems[itemIdx];\r\n\r\n  if (itemIdx < 0) {\r\n    return {\r\n      ...state,\r\n      cartItems: [...cartItems, createItem(cartItem, book, quantity)],\r\n    };\r\n  } else {\r\n    return {\r\n      ...state,\r\n      cartItems: [\r\n        ...cartItems.slice(0, itemIdx),\r\n        createItem(cartItem, book, quantity),\r\n        ...cartItems.slice(itemIdx + 1),\r\n      ],\r\n    };\r\n  }\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  const { cartItems } = state;\r\n  switch (action.type) {\r\n    case FETCH_BOOKS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case FETCH_BOOKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        books: action.payload,\r\n      };\r\n    case FETCH_BOOKS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n    case BOOK_ADDED_TO_CART:\r\n      return updateCartItems(state, action.payload, 1);\r\n    case BOOK_DELETED_FROM_CART:\r\n      return updateCartItems(state, action.payload, -1);\r\n\r\n    case BOOKS_DELETED_FROM_CART:\r\n      const removedBookId = action.payload;\r\n      const idx = cartItems.findIndex(({ id }) => id === removedBookId);\r\n      return {\r\n        ...state,\r\n        cartItems: [...cartItems.slice(0, idx), ...cartItems.slice(idx + 1)],\r\n      };\r\n    case FILTERED_BOOKS_PRICE:\r\n      return {\r\n        ...state,\r\n        filterPriceType: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport {reducer} from '../reducers'\r\nimport logger from \"redux-logger\";\r\n\r\n\r\nexport const store = createStore(reducer, applyMiddleware(logger));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './normalize.css';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nexport const bookstoreServiceContext = React.createContext();\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <bookstoreServiceContext.Provider value={bookstoreService}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </bookstoreServiceContext.Provider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","export default class BookstoreService {\r\n    data = [\r\n        {\r\n            id: 57,\r\n            title: 'Хоббит, или туда и обратно',\r\n            author: 'Толкин Дж.',\r\n            price: 153,\r\n            country: 'foreign literature',\r\n            coverImage: \"2412538_detail.jpg\",\r\n            count: 1,\r\n        },\r\n        {\r\n            id: 54,\r\n            title: 'Убить пересмешника',\r\n            author: 'Харпер Ли',\r\n            price: 237,\r\n            country: 'foreign literature',\r\n            coverImage: \"2622192_detail.jpg\",\r\n            count: 1,\r\n        },\r\n        {\r\n            id: 36,\r\n            title: 'О мышах и людях',\r\n            author: 'Джон Стейнбек',\r\n            price: 127,\r\n            country: 'foreign literature',\r\n            coverImage: \"2612850_detail.jpg\",\r\n            count: 1,\r\n        },\r\n        {\r\n            id: 39,\r\n            title: 'Заводной апельсин',\r\n            author: 'Энтони Бёрджесс',\r\n            price: 178,\r\n            country: 'foreign literature',\r\n            coverImage: \"2596266_detail.jpg\",\r\n            count: 1,\r\n        },\r\n        {\r\n            id: 47,\r\n            title: 'Мы',\r\n            author: 'Замятин Е.И.',\r\n            price: 133,\r\n            country: 'russian literature',\r\n            coverImage: \"2667182_detail.jpg\",\r\n            count: 1,\r\n        },\r\n        {\r\n            id: 55,\r\n            title: 'Алхимик',\r\n            author: 'Пауло Коэльо',\r\n            price: 129,\r\n            country: 'foreign literature',\r\n            coverImage: \"2450235_detail.jpg\",\r\n            count: 1,\r\n        },\r\n        {\r\n            id: 64,\r\n            title: 'Автостопом по галактике',\r\n            author: 'Дуглас Адамс',\r\n            price: 192,\r\n            country: 'foreign literature',\r\n            coverImage: \"2421138_detail.jpg\",\r\n            count: 1,\r\n        },\r\n    ]\r\n\r\n    getBooks = () => {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => resolve(this.data), 800)\r\n        })\r\n    }\r\n};"],"sourceRoot":""}